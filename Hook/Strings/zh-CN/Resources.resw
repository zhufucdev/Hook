<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddButtonText.Text" xml:space="preserve">
    <value>打开新文件</value>
  </data>
  <data name="BuiltinConverter.Name" xml:space="preserve">
    <value>内建转换器</value>
  </data>
  <data name="CancelButton.Text" xml:space="preserve">
    <value>取消</value>
  </data>
  <data name="ClearButton.Text" xml:space="preserve">
    <value>清空列表</value>
  </data>
  <data name="CloseButton.Text" xml:space="preserve">
    <value>关闭</value>
  </data>
  <data name="ConverterHeader.Text" xml:space="preserve">
    <value>转换器</value>
  </data>
  <data name="ConverterNotFound.Content" xml:space="preserve">
    <value>所选转换器（ID: %s）已丢失。将切换为默认。</value>
  </data>
  <data name="ConverterNotFound.Title" xml:space="preserve">
    <value>转换器未找到</value>
  </data>
  <data name="ConvertHeader.Text" xml:space="preserve">
    <value>正在将文档转换为网页</value>
  </data>
  <data name="DropInstallBody.Text" xml:space="preserve">
    <value>支持.hplugin文件，安装后将在文档或Hook中实现插件的功能</value>
  </data>
  <data name="DropInstallHeader.Text" xml:space="preserve">
    <value>拖放以安装</value>
  </data>
  <data name="ErrorOpen.Title" xml:space="preserve">
    <value>打开文件时出现错误</value>
  </data>
  <data name="GeneralHeader.Text" xml:space="preserve">
    <value>通用</value>
  </data>
  <data name="Home.Header" xml:space="preserve">
    <value>主页</value>
  </data>
  <data name="HomeHeader.Text" xml:space="preserve">
    <value>您希望做什么？</value>
  </data>
  <data name="ManageHeader.Text" xml:space="preserve">
    <value>调整设置</value>
  </data>
  <data name="NotSupported.Content" xml:space="preserve">
    <value>无法打开不受支持的%s文件</value>
  </data>
  <data name="NotSupported.Title" xml:space="preserve">
    <value>不支持的文件格式</value>
  </data>
  <data name="PlugInHeader.Text" xml:space="preserve">
    <value>管理插件</value>
  </data>
  <data name="PlugInsUIHeader.Text" xml:space="preserve">
    <value>插件</value>
  </data>
  <data name="RecentHeader.Text" xml:space="preserve">
    <value>最近打开</value>
  </data>
  <data name="RemoveButton.Text" xml:space="preserve">
    <value>清除此项</value>
  </data>
  <data name="ReplaceButton.Text" xml:space="preserve">
    <value>替换</value>
  </data>
  <data name="ReplacePlugin.Content" xml:space="preserve">
    <value>已安装名为%name%的插件，是否替换？
已安装的插件：
  作者：%old_author%
  版本：%old_version%
将要安装的插件：
  作者：%new_author%
  版本：%new_version%</value>
  </data>
  <data name="ReplacePlugin.Title" xml:space="preserve">
    <value>替换插件</value>
  </data>
  <data name="SettingsHeader.Text" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="StartupDeny.Message" xml:space="preserve">
    <value>要使用插件的全部功能，请在任务管理器或系统设置中启用自动启动</value>
  </data>
  <data name="StartupDeny.Title" xml:space="preserve">
    <value>自动启动请求受拒绝</value>
  </data>
  <data name="Uninstallation.Content" xml:space="preserve">
    <value>相关数据将被清空且无法恢复。是否继续？</value>
  </data>
  <data name="Uninstallation.Title" xml:space="preserve">
    <value>将卸载此插件</value>
  </data>
  <data name="UninstallButton.Text" xml:space="preserve">
    <value>卸载</value>
  </data>
  <data name="UnknownHeader.Text" xml:space="preserve">
    <value>未知</value>
  </data>
</root>